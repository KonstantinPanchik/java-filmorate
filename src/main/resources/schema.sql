CREATE TABLE IF NOT EXISTS mpa(
mpa_id      integer         GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name        varchar(6)      NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS genre(
genre_id    integer         GENERATED BY DEFAULT AS IDENTITY  PRIMARY KEY,
name        varchar(30)     NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film(
film_id         integer         GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name            varchar(100)    NOT NULL UNIQUE,
description     varchar(200),
release_date    DATE,
duration        integer,
mpa_id          integer         REFERENCES mpa(mpa_id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS film_genre(
film_id         integer     REFERENCES film(film_id) ON DELETE CASCADE,
genre_id        integer     REFERENCES genre(genre_id) ON DELETE CASCADE,
CONSTRAINT film_id_genre_id_pk PRIMARY KEY(film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users(
user_id         integer         GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email           varchar(50)     NOT NULL UNIQUE,
login           varchar(50)     NOT NULL UNIQUE,
name            varchar(50),
birthday        DATE
);

CREATE TABLE IF NOT EXISTS likes(
film_id     integer     REFERENCES  film(film_id) ON DELETE CASCADE,
user_id     integer     REFERENCES  users(user_id) ON DELETE CASCADE,
CONSTRAINT user_id_film_id_pk PRIMARY KEY(film_id,user_id)
);

CREATE TABLE IF NOT EXISTS friendship(
user_id         integer     REFERENCES users(user_id) ON DELETE CASCADE,
friend_id       integer     REFERENCES users(user_id) ON DELETE CASCADE,
status          varchar(50),
CONSTRAINT user_id_friend_id_pk PRIMARY KEY(user_id,friend_id)
)

